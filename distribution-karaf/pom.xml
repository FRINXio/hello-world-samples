<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
      <groupId>io.frinx.distribution</groupId>
      <artifactId>root</artifactId>
      <version>1.4.7.rc1-frinx-SNAPSHOT</version>
  </parent>
  <groupId>com.customer</groupId>
  <version>1.4.7.rc1-frinx-SNAPSHOT</version>
  <artifactId>distribution-karaf</artifactId>
  <packaging>pom</packaging>


  <properties>
    <frinx.version>1.4.7.rc1-frinx-SNAPSHOT</frinx.version>
    <odlparent.version>1.6.4-Beryllium-SR4.1_4_7_rc1-frinxodl-SNAPSHOT</odlparent.version>
    <karaf.resources.version>1.6.4-Beryllium-SR4.1_4_7_rc1-frinxodl-SNAPSHOT</karaf.resources.version>
    <autostarted.features>hello-world,</autostarted.features>      <!-- separated by comma -->
  </properties>

  <dependencies>
    <dependency>
      <!-- scope is compile so all features (there is only one) are installed
            into startup.properties and the feature repo itself is not installed -->
      <groupId>org.apache.karaf.features</groupId>
      <artifactId>framework</artifactId>
      <version>${karaf.version}</version>
      <type>kar</type>
      <exclusions>
        <exclusion>
          <groupId>org.osgi</groupId>
          <artifactId>org.osgi.core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.sshd</groupId>
          <artifactId>sshd-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- scope is runtime so the feature repo is listed in the features
      service config file, and features may be installed using the
      karaf-maven-plugin configuration -->
    <dependency>
      <groupId>org.apache.karaf.features</groupId>
      <artifactId>standard</artifactId>
      <version>${karaf.version}</version>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
    </dependency>

    <!-- Branding -->
    <dependency>
      <groupId>io.frinx.distribution</groupId>
      <artifactId>karaf-branding</artifactId>
      <version>${frinx.version}</version>
    </dependency>

    <!-- Resources needed -->
    <dependency>
      <groupId>org.opendaylight.controller</groupId>
      <artifactId>opendaylight-karaf-resources</artifactId>
      <version>${karaf.resources.version}</version>
    </dependency>

    <!-- frinx features -->
    <dependency>
      <groupId>io.frinx.distribution</groupId>
      <artifactId>features-core</artifactId>
      <version>${frinx.version}</version>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>org.opendaylight.controller</groupId>
          <artifactId>opendaylight-karaf-empty</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>io.frinx.distribution</groupId>
      <artifactId>features-sp</artifactId>
      <version>${frinx.version}</version>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>org.opendaylight.controller</groupId>
          <artifactId>opendaylight-karaf-empty</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>io.frinx.distribution</groupId>
      <artifactId>features-dc</artifactId>
      <version>${frinx.version}</version>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>org.opendaylight.controller</groupId>
          <artifactId>opendaylight-karaf-empty</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>hello-world-features</artifactId>
      <version>${project.version}</version>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>org.opendaylight.controller</groupId>
          <artifactId>opendaylight-karaf-empty</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.karaf.tooling</groupId>
        <artifactId>karaf-maven-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <!-- no startupFeatures -->
          <bootFeatures>
            <feature>standard</feature>
          </bootFeatures>
          <!-- no installedFeatures -->
        </configuration>
        <executions>
          <execution>
            <id>populate-system</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>features-add-to-repository</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>mvn:org.apache.karaf.features/standard/${karaf.version}/xml/features</descriptor>
              </descriptors>
              <features>
                <feature>standard</feature>
                <feature>config</feature>
                <feature>package</feature>
                <feature>kar</feature>
                <feature>ssh</feature>
                <feature>management</feature>
                <feature>war</feature>
              </features>
              <repository>target/assembly/system</repository>
            </configuration>
          </execution>
          <execution>
            <id>process-resources</id>
            <goals>
              <goal>install-kars</goal>
            </goals>
            <phase>process-resources</phase>
          </execution>
          <execution>
            <id>package</id>
            <goals>
              <goal>instance-create-archive</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <!-- here the phase you need -->
            <phase>generate-resources</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>io.frinx.distribution</groupId>
                  <artifactId>karaf-branding</artifactId>
                  <version>${frinx.version}</version>
                  <outputDirectory>target/assembly/lib</outputDirectory>
                  <destFileName>karaf.branding-${frinx.version}.jar</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-karaf-resources</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
             <outputDirectory>${project.build.directory}/assembly</outputDirectory>
             <groupId>org.opendaylight.controller</groupId>
             <includeArtifactIds>opendaylight-karaf-resources</includeArtifactIds>
             <excludes>META-INF\/**</excludes>
             <excludeTransitive>true</excludeTransitive>
             <ignorePermissions>false</ignorePermissions>
            </configuration>
          </execution>

        </executions>
      </plugin>
      <plugin>
        <groupId>org.opendaylight.odlparent</groupId>
        <artifactId>karaf-plugin</artifactId>
        <version>${odlparent.version}</version>
        <executions>
          <execution>
            <id>populate-local-repo</id>
            <goals>
              <goal>populate-local-repo</goal>
            </goals>
            <configuration>
              <localRepo>${project.build.directory}/assembly/system</localRepo>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
            <execution>
                <phase>prepare-package</phase>
                <goals>
                    <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>
                    <chmod perm="755">
                        <fileset dir="${project.build.directory}/assembly/bin">
                          <include name="karaf"/>
                          <include name="instance"/>
                          <include name="start"/>
                          <include name="stop"/>
                          <include name="status"/>
                          <include name="client"/>
                          <include name="shell"/>
                        </fileset>
                    </chmod>

                    <replaceregexp file="${project.build.directory}/assembly/etc/org.apache.karaf.features.cfg"
                                   match="featuresBoot=(.*)"
                                   replace="featuresBoot=config, standard, region, package, kar, ssh, management, ${autostarted.features}"
                                   byline="true" />

                  </tasks>
                </configuration>
            </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <!-- here the phase you need -->
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>

              <outputDirectory>${basedir}/target/assembly</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/assembly</directory>
                </resource>
                <resource>
                  <directory>src/main/resources</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
              <overwrite>true</overwrite>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>
